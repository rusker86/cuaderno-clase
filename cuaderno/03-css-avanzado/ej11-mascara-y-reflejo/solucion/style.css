/* Base */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: system-ui, sans-serif;
  background: #f8fafc;
  color: #0f172a;
  line-height: 1.6;
}
h1 {
  margin: 1rem;
}
.panel {
  padding: 1rem;
  display: grid;
  gap: 1rem;
}
section {
  background: #fff;
  border: 1px solid #e5e7eb;
  padding: 1rem;
  border-radius: 0.5rem;
}
.demo {
  border: 1px solid #cbd5e1;
  border-radius: 0.5rem;
  padding: 1rem;
  background: #e0f2fe;
  min-height: 120px;
  display: grid;
  place-items: center;
  text-align: center;
}

/* ===== A - Máscaras ===== */

/* A1) Gradiente vertical (opacidad 100% → 0%) */
.masked-grad {
  mask-image: linear-gradient(to bottom, #000 60%, transparent 100%);
  -webkit-mask-image: linear-gradient(to bottom, #000 60%, transparent 100%);
}

/* A2) SVG data URI - círculo blanco visible */
.masked-svg {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Crect width='100' height='100' fill='black'/%3E%3Ccircle cx='50' cy='50' r='35' fill='white'/%3E%3C/svg%3E");
  mask-image: var(--svg);
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
  -webkit-mask-image: var(--svg);
  -webkit-mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
  background: linear-gradient(135deg, #a7f3d0, #bfdbfe);
  color: #0f172a;
}

/* A3) Spotlight radial */
.masked-spot {
  mask-image: radial-gradient(circle at 50% 50%, #000 40%, transparent 42%);
  -webkit-mask-image: radial-gradient(
    circle at 50% 50%,
    #000 40%,
    transparent 42%
  );
  background: conic-gradient(
    from 0deg,
    #fde68a,
    #f97316,
    #22c55e,
    #0ea5e9,
    #a78bfa,
    #fde68a
  );
}

/* A4) Composición - rayas AND círculo (intersección aproximada) */
.masked-composite {
  background: #a7f3d0;
  /* WebKit */
  -webkit-mask-image: repeating-linear-gradient(
      90deg,
      #000 0 8px,
      transparent 8px 16px
    ),
    radial-gradient(circle at 50% 50%, #000 42%, transparent 43%);
  -webkit-mask-composite: source-in; /* conserva intersección */

  /* Estándar (Firefox y navegadores modernos) */
  mask-image: repeating-linear-gradient(90deg, #000 0 8px, transparent 8px 16px),
    radial-gradient(circle at 50% 50%, #000 42%, transparent 43%);
  mask-composite: intersect;
}

/* ===== B - Reflejos ===== */

figure {
  margin: 0;
}
figcaption {
  font-size: 0.9rem;
  color: #475569;
  margin-top: 0.25rem;
  text-align: center;
}

/* B1) Reflejo vertical con ::after */
.reflect {
  position: relative;
  width: min(560px, 100%);
  margin: 0 auto;
}
.reflect img {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 0.5rem;
}
.reflect::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -40%;
  height: 40%;
  /* Usar una imagen válida - cambiar por tu URL específica */
  background: url("https://images.unsplash.com/photo-1519681393784-d120267933ba?q=80&w=1200&auto=format&fit=crop")
    center/cover no-repeat;
  transform: scaleY(-1);
  transform-origin: top;
  /* máscara para desvanecer el reflejo */
  mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.45), transparent 80%);
  -webkit-mask-image: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.45),
    transparent 80%
  );
  filter: blur(1px);
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
  z-index: -1; /* Asegurar que esté detrás */
}

/* B2) Reflejo lateral (izquierda) con ::after */
.reflect-x {
  position: relative;
  width: min(420px, 100%);
  margin: 1rem auto 0;
}
.reflect-x img {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 0.5rem;
}
.reflect-x::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: -35%;
  width: 35%;
  /* Usar una imagen válida - cambiar por tu URL específica */
  background: url("https://images.unsplash.com/photo-1518779578993-ec3579fee39f?q=80&w=1200&auto=format&fit=crop")
    center/cover no-repeat;
  transform: scaleX(-1);
  transform-origin: left;
  mask-image: linear-gradient(to left, rgba(0, 0, 0, 0.35), transparent 80%);
  -webkit-mask-image: linear-gradient(
    to left,
    rgba(0, 0, 0, 0.35),
    transparent 80%
  );
  filter: blur(0.5px);
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
  z-index: -1; /* Asegurar que esté detrás */
}

/* Alternativa más robusta para reflejos dinámicos */
.reflect-dynamic {
  position: relative;
  width: min(560px, 100%);
  margin: 0 auto;
}
.reflect-dynamic img {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 0.5rem;
}
/* Reflejo que funciona con cualquier imagen */
.reflect-dynamic::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -40%;
  height: 40%;
  /* En lugar de -moz-element(), usar la URL de la imagen directamente */
  background-image: inherit; /* Hereda del elemento padre si es posible */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  transform: scaleY(-1);
  transform-origin: top;
  mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.45), transparent 80%);
  -webkit-mask-image: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.45),
    transparent 80%
  );
  filter: blur(1px);
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
  z-index: -1;
}

/* Utilidades para debugging */
.debug-mask {
  outline: 2px dashed #ef4444;
  outline-offset: 2px;
}

/* Fallbacks para navegadores sin soporte de mask */
@supports not (mask-image: linear-gradient(to bottom, black, transparent)) {
  .masked-grad {
    /* Fallback: usar opacity o clip-path como alternativa */
    opacity: 0.8;
  }

  .masked-svg {
    /* Fallback: usar clip-path con forma básica */
    clip-path: circle(35% at 50% 50%);
  }
}

/* Notas corregidas:
 - Blanco (o canal alfa opaco) = visible; negro/transparente = oculta.
 - Prefijos -webkit- mejoran compatibilidad en Safari/iOS.
 - SVG data URI debe estar URL-encoded correctamente.
 - Reflejo: el pseudo crea una "copia" visual usando la misma URL + inversión y máscara.
 - Añadido z-index para controlar apilamiento de reflejos.
 - Si no hay soporte de mask, el contenido sigue siendo usable (solo sin reflejo/efecto).
 - mask-composite: intersect es estándar, source-in es WebKit específico. */
