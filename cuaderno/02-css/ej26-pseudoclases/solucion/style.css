/* Base */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: system-ui, sans-serif;
  background: #f8fafc;
  color: #0f172a;
  line-height: 1.6;
}
h1 {
  margin: 1rem;
}
.panel {
  padding: 1rem;
  display: grid;
  gap: 1.25rem;
}
section {
  background: #fff;
  border: 1px solid #e5e7eb;
  padding: 1rem;
}
h3 {
  margin: 0.5rem 0;
}

/* Utilidades */
.btn,
.btn-link {
  display: inline-block;
  padding: 0.5rem 0.75rem;
  border: 1px solid #94a3b8;
  background: #fff;
  color: #0f172a;
  text-decoration: none;
  border-radius: 0.375rem;
}
.btn + .btn,
.btn-link + .btn-link {
  margin-left: 0.5rem;
}
.mini-form {
  display: grid;
  gap: 0.5rem;
  margin-top: 0.75rem;
}
.mini-form label {
  display: block;
}
.mini-form input[type="text"],
.mini-form input[type="email"] {
  padding: 0.5rem;
  border: 1px solid #cbd5e1;
  border-radius: 0.375rem;
}
.check {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}
.lista {
  padding-left: 1.25rem;
}

/* 1) Estados interactivos */
.btn-link:hover {
  background: #f1f5f9;
}
.btn-link:focus {
  outline: 3px solid #0ea5e9;
  outline-offset: 2px;
}
.btn-link:active {
  transform: translateY(1px);
}

.btn:hover {
  background: #f1f5f9;
}
.btn:focus-visible {
  outline: 3px solid #0ea5e9;
  outline-offset: 2px;
}
.btn:active {
  transform: translateY(1px);
}

/* Inputs */
.mini-form input:focus {
  outline: 3px solid #0ea5e9;
  outline-offset: 2px;
}
.mini-form input:disabled {
  background: #f1f5f9;
  color: #64748b;
  cursor: not-allowed;
}
.mini-form input[type="checkbox"]:checked {
  outline: 2px solid #16a34a;
}

/* Opcional required/optional */
.mini-form input:required {
  border-color: #f59e0b;
}
.mini-form input:optional {
  border-color: #94a3b8;
}

/* 2) Estructurales — Lista */
.lista li:first-child {
  background: #e0f2fe;
}
.lista li:last-child {
  background: #c7d2fe;
}
.lista li:nth-child(odd) {
  font-weight: 600;
} /* impares */
.lista li:nth-child(3n) {
  color: #0ea5e9;
} /* cada 3 elementos */

/* nth-of-type / :not en .mix */
.mix p:nth-of-type(odd) {
  background: #f1f5f9;
}
.mix p:not(.excluir) {
  border-left: 3px solid #94a3b8;
  padding-left: 0.5rem;
}

/* :empty — sin texto, sin hijos (ni espacios) */
.caja-vacia:empty {
  min-height: 60px;
  border: 2px dashed #f59e0b;
  background: #fff7ed;
}

/* (Opcional) :target */
#seccion-objetivo:target {
  outline: 3px solid #0ea5e9;
  background: #e0f2fe;
}

/* Notas:
   - :nth-child(n) cuenta la posición del hijo entre TODOS los tipos.
   - :nth-of-type(n) cuenta solo elementos del MISMO tipo (p, li, etc.).
   - :focus-visible es preferible para foco “inteligente”; aún usa :focus como fallback si lo necesitas.
   - :empty requiere que no existan ni textos ni nodos hijos (ni espacios). */
